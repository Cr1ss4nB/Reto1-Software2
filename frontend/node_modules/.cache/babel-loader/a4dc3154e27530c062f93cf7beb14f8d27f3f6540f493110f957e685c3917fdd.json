{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laura\\\\Documents\\\\projects2025\\\\Reto4\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport apiService from '../services/apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(() => {\n    // Inicializar estado basado en localStorage\n    const token = localStorage.getItem('token');\n    const customerId = localStorage.getItem('customerId');\n    console.log('AuthContext initial state - token:', !!token, 'customerId:', customerId);\n    return !!token;\n  });\n  const [user, setUser] = useState(() => {\n    const customerId = localStorage.getItem('customerId');\n    return customerId ? {\n      customerId\n    } : null;\n  });\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    // Solo verificar una vez al montar\n    const token = localStorage.getItem('token');\n    const customerId = localStorage.getItem('customerId');\n    console.log('AuthContext useEffect - Checking stored auth:', {\n      token: !!token,\n      customerId\n    });\n    if (token && customerId) {\n      apiService.setAuthToken(token);\n      setIsAuthenticated(true);\n      setUser({\n        customerId\n      });\n      console.log('AuthContext useEffect - User authenticated from storage');\n    }\n    setLoading(false);\n  }, []);\n  const login = async (customerId, password) => {\n    try {\n      console.log('LOGIN START - customerId:', customerId);\n      const response = await apiService.login(customerId, password);\n      console.log('LOGIN RESPONSE:', response.data);\n      if (response.data && response.data.token) {\n        const token = response.data.token;\n        console.log('LOGIN SUCCESS - Setting auth state');\n\n        // Guardar en localStorage\n        localStorage.setItem('token', token);\n        localStorage.setItem('customerId', customerId);\n\n        // Configurar API service\n        apiService.setAuthToken(token);\n\n        // Establecer estado\n        setIsAuthenticated(true);\n        setUser({\n          customerId\n        });\n        console.log('LOGIN COMPLETE - isAuthenticated:', true, 'user:', {\n          customerId\n        });\n        return {\n          success: true\n        };\n      } else {\n        console.log('LOGIN FAILED - Invalid response:', response.data);\n        return {\n          success: false,\n          message: 'Credenciales inv치lidas'\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('LOGIN ERROR:', error);\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error de conexi칩n'\n      };\n    }\n  };\n  const register = async (customerId, password) => {\n    try {\n      await apiService.register(customerId, password);\n      return {\n        success: true,\n        message: 'Usuario registrado exitosamente'\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Error en registro:', error);\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Error al registrar usuario'\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('customerId');\n    apiService.setAuthToken(null);\n    setIsAuthenticated(false);\n    setUser(null);\n  };\n  const value = {\n    isAuthenticated,\n    user,\n    loading,\n    login,\n    register,\n    logout\n  };\n  console.log('AuthContext RENDER - isAuthenticated:', isAuthenticated, 'user:', user, 'loading:', loading);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"D7exTwlWSXID0BFx7N58SuIzB3I=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","apiService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","customerId","console","log","user","setUser","loading","setLoading","setAuthToken","login","password","response","data","setItem","success","message","error","_error$response","_error$response$data","register","_error$response2","_error$response2$data","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Laura/Documents/projects2025/Reto4/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport apiService from '../services/apiService';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(() => {\r\n    // Inicializar estado basado en localStorage\r\n    const token = localStorage.getItem('token');\r\n    const customerId = localStorage.getItem('customerId');\r\n    console.log('AuthContext initial state - token:', !!token, 'customerId:', customerId);\r\n    return !!token;\r\n  });\r\n  const [user, setUser] = useState(() => {\r\n    const customerId = localStorage.getItem('customerId');\r\n    return customerId ? { customerId } : null;\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Solo verificar una vez al montar\r\n    const token = localStorage.getItem('token');\r\n    const customerId = localStorage.getItem('customerId');\r\n    console.log('AuthContext useEffect - Checking stored auth:', { token: !!token, customerId });\r\n    \r\n    if (token && customerId) {\r\n      apiService.setAuthToken(token);\r\n      setIsAuthenticated(true);\r\n      setUser({ customerId });\r\n      console.log('AuthContext useEffect - User authenticated from storage');\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (customerId, password) => {\r\n    try {\r\n      console.log('LOGIN START - customerId:', customerId);\r\n      const response = await apiService.login(customerId, password);\r\n      console.log('LOGIN RESPONSE:', response.data);\r\n      \r\n      if (response.data && response.data.token) {\r\n        const token = response.data.token;\r\n        console.log('LOGIN SUCCESS - Setting auth state');\r\n        \r\n        // Guardar en localStorage\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('customerId', customerId);\r\n        \r\n        // Configurar API service\r\n        apiService.setAuthToken(token);\r\n        \r\n        // Establecer estado\r\n        setIsAuthenticated(true);\r\n        setUser({ customerId });\r\n        \r\n        console.log('LOGIN COMPLETE - isAuthenticated:', true, 'user:', { customerId });\r\n        return { success: true };\r\n      } else {\r\n        console.log('LOGIN FAILED - Invalid response:', response.data);\r\n        return { success: false, message: 'Credenciales inv치lidas' };\r\n      }\r\n    } catch (error) {\r\n      console.error('LOGIN ERROR:', error);\r\n      return { \r\n        success: false, \r\n        message: error.response?.data?.message || 'Error de conexi칩n'\r\n      };\r\n    }\r\n  };\r\n\r\n  const register = async (customerId, password) => {\r\n    try {\r\n      await apiService.register(customerId, password);\r\n      return { success: true, message: 'Usuario registrado exitosamente' };\r\n    } catch (error) {\r\n      console.error('Error en registro:', error);\r\n      return { \r\n        success: false, \r\n        message: error.response?.data?.message || 'Error al registrar usuario' \r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('customerId');\r\n    apiService.setAuthToken(null);\r\n    setIsAuthenticated(false);\r\n    setUser(null);\r\n  };\r\n\r\n  const value = {\r\n    isAuthenticated,\r\n    user,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout\r\n  };\r\n\r\n  console.log('AuthContext RENDER - isAuthenticated:', isAuthenticated, 'user:', user, 'loading:', loading);\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}