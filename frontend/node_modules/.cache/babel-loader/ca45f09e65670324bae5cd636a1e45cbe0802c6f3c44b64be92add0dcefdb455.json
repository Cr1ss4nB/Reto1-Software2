{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laura\\\\Documents\\\\projects2025\\\\Reto4\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport apiService from '../services/apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Solo verificar una vez al montar\n    const token = localStorage.getItem('token');\n    const customerId = localStorage.getItem('customerId');\n    console.log('AuthContext useEffect - Checking stored auth:', {\n      token: !!token,\n      customerId\n    });\n    if (token && customerId) {\n      apiService.setAuthToken(token);\n      setIsAuthenticated(true);\n      setUser({\n        customerId\n      });\n      console.log('AuthContext useEffect - User authenticated from storage');\n    }\n    setLoading(false);\n  }, []);\n  const login = async (customerId, password) => {\n    try {\n      console.log('LOGIN START - customerId:', customerId);\n      const response = await apiService.login(customerId, password);\n      console.log('LOGIN RESPONSE:', response.data);\n      if (response.data && response.data.token) {\n        const token = response.data.token;\n        console.log('LOGIN SUCCESS - Token received:', token.substring(0, 20) + '...');\n\n        // Guardar en localStorage\n        localStorage.setItem('token', token);\n        localStorage.setItem('customerId', customerId);\n        console.log('LOGIN - Token saved to localStorage:', localStorage.getItem('token') ? 'Success' : 'Failed');\n\n        // Configurar API service\n        apiService.setAuthToken(token);\n        console.log('LOGIN - API service token configured');\n\n        // Establecer estado\n        setIsAuthenticated(true);\n        setUser({\n          customerId\n        });\n        console.log('LOGIN COMPLETE - isAuthenticated:', true, 'user:', {\n          customerId\n        });\n        return {\n          success: true\n        };\n      } else {\n        console.log('LOGIN FAILED - Invalid response:', response.data);\n        return {\n          success: false,\n          message: 'Credenciales inv치lidas'\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('LOGIN ERROR:', error);\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error de conexi칩n'\n      };\n    }\n  };\n  const register = async (customerId, password) => {\n    try {\n      await apiService.register(customerId, password);\n      return {\n        success: true,\n        message: 'Usuario registrado exitosamente'\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Error en registro:', error);\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Error al registrar usuario'\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('customerId');\n    apiService.setAuthToken(null);\n    setIsAuthenticated(false);\n    setUser(null);\n  };\n  const value = {\n    isAuthenticated,\n    user,\n    loading,\n    login,\n    register,\n    logout\n  };\n  console.log('AuthContext RENDER - isAuthenticated:', isAuthenticated, 'user:', user, 'loading:', loading);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"mKb+zX9grAar2iMVStuBBwt7fpw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","apiService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","token","localStorage","getItem","customerId","console","log","setAuthToken","login","password","response","data","substring","setItem","success","message","error","_error$response","_error$response$data","register","_error$response2","_error$response2$data","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Laura/Documents/projects2025/Reto4/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport apiService from '../services/apiService';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Solo verificar una vez al montar\n    const token = localStorage.getItem('token');\n    const customerId = localStorage.getItem('customerId');\n    console.log('AuthContext useEffect - Checking stored auth:', { token: !!token, customerId });\n    \n    if (token && customerId) {\n      apiService.setAuthToken(token);\n      setIsAuthenticated(true);\n      setUser({ customerId });\n      console.log('AuthContext useEffect - User authenticated from storage');\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (customerId, password) => {\n    try {\n      console.log('LOGIN START - customerId:', customerId);\n      const response = await apiService.login(customerId, password);\n      console.log('LOGIN RESPONSE:', response.data);\n      \n      if (response.data && response.data.token) {\n        const token = response.data.token;\n        console.log('LOGIN SUCCESS - Token received:', token.substring(0, 20) + '...');\n        \n        // Guardar en localStorage\n        localStorage.setItem('token', token);\n        localStorage.setItem('customerId', customerId);\n        console.log('LOGIN - Token saved to localStorage:', localStorage.getItem('token') ? 'Success' : 'Failed');\n        \n        // Configurar API service\n        apiService.setAuthToken(token);\n        console.log('LOGIN - API service token configured');\n        \n        // Establecer estado\n        setIsAuthenticated(true);\n        setUser({ customerId });\n        \n        console.log('LOGIN COMPLETE - isAuthenticated:', true, 'user:', { customerId });\n        return { success: true };\n      } else {\n        console.log('LOGIN FAILED - Invalid response:', response.data);\n        return { success: false, message: 'Credenciales inv치lidas' };\n      }\n    } catch (error) {\n      console.error('LOGIN ERROR:', error);\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Error de conexi칩n'\n      };\n    }\n  };\n\n  const register = async (customerId, password) => {\n    try {\n      await apiService.register(customerId, password);\n      return { success: true, message: 'Usuario registrado exitosamente' };\n    } catch (error) {\n      console.error('Error en registro:', error);\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Error al registrar usuario' \n      };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('customerId');\n    apiService.setAuthToken(null);\n    setIsAuthenticated(false);\n    setUser(null);\n  };\n\n  const value = {\n    isAuthenticated,\n    user,\n    loading,\n    login,\n    register,\n    logout\n  };\n\n  console.log('AuthContext RENDER - isAuthenticated:', isAuthenticated, 'user:', user, 'loading:', loading);\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}